apiVersion: v1
kind: Service
metadata:
  name: patient-cloud
spec:
  ports:
  - port: 1234
  selector:
    app: patient-cloud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: patient-cloud
spec:
  selector:
    matchLabels:
      app: patient-cloud
  replicas: 1
  template:
    metadata:
      labels:
        app: patient-cloud
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
      containers:
      - name: patient-cloud
        image: evolonation/patient-cloud:CUP_VERSION
        imagePullPolicy: IfNotPresent # 如果image为本地构建则需要该参数
        ports:
        - containerPort: 1234
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: patient-edge
spec:
  selector:
    matchLabels:
      app: patient-edge
  replicas: 1
  template:
    metadata:
      labels:
        app: patient-edge
    spec:
      # hostNetwork: true
      nodeName: zzy-raspberrypi
      containers:
      - name: patient-edge
        image: evolonation/patient-edge:CUP_VERSION
        imagePullPolicy: IfNotPresent # 如果image为本地构建则需要该参数
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-mysql
spec:
  selector:  
    matchLabels:
      app: edge-mysql
  replicas: 1 
  template: 
    metadata:
      labels:
        app: edge-mysql
    spec:
      nodeName: zzy-raspberrypi
      containers:
      - name: mysql
        image: mysql:8.0.32
        ports:
          - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: 2002116yy
        volumeMounts:
        - name: scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: scripts
        configMap:
          name: edge-mysql-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: edge-mysql
spec:
  ports:
  - port: 3306
  selector:
    app: edge-mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-mysql
spec:
  selector:  
    matchLabels:
      app: cloud-mysql
  replicas: 1 
  template: 
    metadata:
      labels:
        app: cloud-mysql
    spec:
      nodeName: imaginecup
      containers:
      - name: mysql
        image: mysql:8.0.32
        ports:
          - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: 2002116yy
        volumeMounts:
        - name: scripts
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: scripts
        configMap:
          name: cloud-mysql-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-mysql
spec:
  ports:
  - port: 3306
  selector:
    app: cloud-mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-mqtt
spec:
  selector:  
    matchLabels:
      app: edge-mqtt
  replicas: 1 
  template: 
    metadata:
      labels:
        app: edge-mqtt
    spec:
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      nodeName: zzy-raspberrypi
      containers:
      - name: mqtt
        image: eclipse-mosquitto:1.6.15
        ports:
        - containerPort: 1883
          hostPort: 1883
---
apiVersion: v1
kind: Service
metadata:
  name: edge-mqtt
spec:
  ports:
  - port: 1883
  selector:
    app: edge-mqtt
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-mqtt
spec:
  selector:  
    matchLabels:
      app: cloud-mqtt
  replicas: 1 
  template: 
    metadata:
      labels:
        app: cloud-mqtt
    spec:
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/edge
                operator: DoesNotExist
      containers:
      - name: mqtt
        image: eclipse-mosquitto:1.6.15
        ports:
        - containerPort: 1883
          hostPort: 1883
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-mqtt
spec:
  ports:
  - port: 1883
  selector:
    app: cloud-mqtt